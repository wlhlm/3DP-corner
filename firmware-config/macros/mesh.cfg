# based on https://github.com/rootiest/zippy-klipper_config/blob/50d5bfc1a03793ba515ba85d120ef8b5ffb7b2c9/dev/print_area_bed_mesh.cfg
[gcode_macro BED_MESH_CALIBRATE_ADAPTIVE]
variable_buffer: 20
gcode:
    {% set enabled = printer["gcode_macro _GLOBALS"].use_adaptive_bed_mesh %}

    {% if enabled and "PRINT_MIN" in params and "PRINT_MAX" in params %}
        {% set print_min_x = params.PRINT_MIN.split(",")[0]|float %}
        {% set print_min_y = params.PRINT_MIN.split(",")[1]|float %}
        {% set print_max_x = params.PRINT_MAX.split(",")[0]|float %}
        {% set print_max_y = params.PRINT_MAX.split(",")[1]|float %}

        {% if (print_min_x < print_max_x) and (print_min_y < print_max_y) %}
            {% set mesh_config = printer["configfile"].config["bed_mesh"] %}

            {% if mesh_config.algorithm == "bicubic" %}
                {% set minimum_probe_count = 5 %}
            {% else %}
                {% set minimum_probe_count = 3 %}
            {% endif %}

            {% set probe_count = mesh_config.probe_count.split(",") %}
            {% set probe_count_x = probe_count[0]|int %}
            {% if probe_count | length > 1 %}
                {% set probe_count_y = probe_count[1]|int %}
            {% else %}
                {% set probe_count_y = probe_count_x|int %}
            {% endif %}

            {% set relative_reference_index = mesh_config.relative_reference_index %}

            {% set mesh_min_x = mesh_config.mesh_min.split(",")[0]|float %}
            {% set mesh_min_y = mesh_config.mesh_min.split(",")[1]|float %}
            {% set mesh_max_x = mesh_config.mesh_max.split(",")[0]|float %}
            {% set mesh_max_y = mesh_config.mesh_max.split(",")[1]|float %}

            # If print area is smaller than 50% of the bed size, change to to 3 probe counts instead of the default
            {% if print_max_x - print_min_x < (mesh_max_x - mesh_min_x) * 0.50 %}
                {% set probe_count_x = minimum_probe_count %}
            {% endif %}
            {% if print_max_y - print_min_y < (mesh_max_y - mesh_min_y) * 0.50 %}
                {% set probe_count_y = minimum_probe_count %}
            {% endif %}

            {% if print_min_x - buffer >= mesh_min_x %}
                {% set mesh_min_x = print_min_x - buffer %}
            {% endif %}
            {% if print_min_y - buffer >= mesh_min_y %}
                {% set mesh_min_y = print_min_y - buffer %}
            {% endif %}
            {% if print_max_x + buffer <= mesh_max_x %}
                {% set mesh_max_x = print_max_x + buffer %}
            {% endif %}
            {% if print_max_y + buffer <= mesh_max_y %}
                {% set mesh_max_y = print_max_y + buffer %}
            {% endif %}

            {% if not relative_reference_index %}
                BASE_BED_MESH_CALIBRATE MESH_MIN={mesh_min_x},{mesh_min_y} MESH_MAX={mesh_max_x},{mesh_max_y} PROBE_COUNT={probe_count_x},{probe_count_y}
            {% else %}
                {% set relative_reference_index = (((probe_count_x * probe_count_y) - 1) / 2)|int %}
                BASE_BED_MESH_CALIBRATE MESH_MIN={mesh_min_x},{mesh_min_y} MESH_MAX={mesh_max_x},{mesh_max_y} PROBE_COUNT={probe_count_x},{probe_count_y} RELATIVE_REFERENCE_INDEX={relative_reference_index}
            {% endif %}
        {% else %}
            BASE_BED_MESH_CALIBRATE
        {% endif %}
    {% else %}
        BASE_BED_MESH_CALIBRATE
    {% endif %}
