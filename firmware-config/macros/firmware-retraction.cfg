# Reimplements G10/G11 firmware retraction in macros to add more features compared to the firmware_retraction module

## Overwriting G0/G1 increases load quite a bit, but is necessary to implement LIFT_z in a safe manner
#[gcode_macro G0]
#rename_existing: G0.1
#gcode:
#    {% set _is_retracted = printer["gcode_macro G10"]._is_retracted %}
#    {% set _current_lift_z = printer["gcode_macro G10"]._current_lift_z|float %}
#
#    {% if "Z" in params and params.Z | float != 0.0 and _is_retracted and _current_lift_z > 0.0 %}
#        SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_current_lift_z VALUE=0.0
#    {% endif %}
#    G0.1 {rawparams}
#
#[gcode_macro G1]
#rename_existing: G1.1
#gcode:
#    {% set _is_retracted = printer["gcode_macro G10"]._is_retracted %}
#    {% set _current_lift_z = printer["gcode_macro G10"]._current_lift_z|float %}
#
#    {% if "Z" in params and params.Z | float != 0.0 and _is_retracted and _current_lift_z > 0.0 %}
#        SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_current_lift_z VALUE=0.0
#    {% endif %}
#    G1.1 {rawparams}

[gcode_macro G10]
description: Retract filament
variable_retract_length: 0.0
variable_retract_speed: 20.0
variable_lift_z: 0.0
variable_lift_z_above: 0.0
variable_lift_z_below: 0.0

variable__is_retracted: False
variable__current_lift_z: 0.0
gcode:
    {% if not _is_retracted %}
        SAVE_GCODE_STATE NAME=state_G10
        G91
        G1 E-{retract_length} F{retract_speed * 60}
        #{% if lift_z_above <= printer.gcode_move.gcode_position.z or lift_z_below >= printer.gcode_move.gcode_position.z %}
            G0 Z{lift_z} ; TODO: maybe set max_z_velocity explicitely?
            #SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_current_lift_z VALUE={lift_z}
        #{% endif %}
        RESTORE_GCODE_STATE NAME=state_G10
        SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_is_retracted VALUE=True
    {% endif %}

[gcode_macro G11]
description: Unretract filament
variable_unretract_speed: 10.0
variable_unretract_extra_length: 0.0
gcode:
    {% set _is_retracted = printer["gcode_macro G10"]._is_retracted %}
    {% set _current_lift_z = printer["gcode_macro G10"]._current_lift_z|float %}

    {% set retract_length = printer["gcode_macro G10"].retract_length|float %}
    {% set lift_z = printer["gcode_macro G10"].lift_z|float %}

    {% if _is_retracted %}
        SAVE_GCODE_STATE NAME=state_G11
        G91
        G1 E{retract_length + unretract_extra_length} F{unretract_speed * 60}
        #{% if _current_lift_z != 0.0 %}
            G0 Z-{lift_z} ; TODO: maybe set max_z_velocity explicitely?
            #SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_current_lift_z VALUE=0.0
        #{% endif %}
        RESTORE_GCODE_STATE NAME=state_G11
        SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_is_retracted VALUE=False
    {% endif %}

[gcode_macro SET_RETRACTION]
description: Configure firmware retraction settings
gcode:
    {% if params | length > 0 %}
        {% if "RETRACT_LENGTH" in params %}
            {% set retract_length = params.RETRACT_LENGTH|float %}
            SET_GCODE_VARIABLE MACRO=G10 VARIABLE=retract_length VALUE={retract_length}
        {% endif %}
        {% if "RETRACT_SPEED" in params %}
            {% set retract_speed = params.RETRACT_SPEED|float %}
            SET_GCODE_VARIABLE MACRO=G10 VARIABLE=retract_speed VALUE={retract_speed}
        {% endif %}
        {% if "LIFT_Z" in params %}
            {% set lift_z = params.LIFT_Z|float %}
            SET_GCODE_VARIABLE MACRO=G10 VARIABLE=lift_z VALUE={lift_z}
        {% endif %}
        {% if "LIFT_Z_ABOVE" in params %}
            {% set lift_z_above = params.LIFT_Z_ABOVE|float %}
            SET_GCODE_VARIABLE MACRO=G10 VARIABLE=lift_z_above VALUE={lift_z_above}
        {% endif %}
        {% if "LIFT_Z_BELOW" in params %}
            {% set lift_z_below = params.LIFT_Z_BELOW|float %}
            SET_GCODE_VARIABLE MACRO=G10 VARIABLE=lift_z_below VALUE={lift_z_below}
        {% endif %}
        {% if "UNRETRACT_SPEED" in params %}
            {% set unretract_speed = params.UNRETRACT_SPEED|float %}
            SET_GCODE_VARIABLE MACRO=G11 VARIABLE=unretract_speed VALUE={unretract_speed}
        {% endif %}
        {% if "UNRETRACT_EXTRA_LENGTH" in params %}
            {% set unretract_extra_length = params.UNRETRACT_EXTRA_LENGTH|float %}
            SET_GCODE_VARIABLE MACRO=G11 VARIABLE=unretract_extra_length VALUE={unretract_extra_length}
        {% endif %}

        SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_current_lift_z VALUE=0.0
        SET_GCODE_VARIABLE MACRO=G10 VARIABLE=_is_retracted VALUE=False
    {% else %}
        {% set retract_length = printer["gcode_macro G10"].retract_length %}
        {% set retract_speed = printer["gcode_macro G10"].retract_speed %}
        {% set lift_z = printer["gcode_macro G10"].lift_z %}
        {% set lift_z_above = printer["gcode_macro G10"].lift_z_above %}
        {% set lift_z_below = printer["gcode_macro G10"].lift_z_below %}
        {% set unretract_speed = printer["gcode_macro G11"].unretract_speed %}
        {% set unretract_extra_length = printer["gcode_macro G11"].unretract_extra_length %}

        _PRINT_CONSOLE T="RETRACT_LENGTH={retract_length} RETRACT_SPEED={retract_speed} LIFT_Z={lift_z} LIFT_Z_ABOVE={lift_z_above} LIFT_Z_BELOW={lift_z_below} UNRETRACT_SPEED={unretract_speed} UNRETRACT_EXTRA_LENGTH={unretract_extra_length}"
    {% endif %}

# implementing GET_RETRACTION seems superfluous. Just call SET_RETRACTION without arguments

[gcode_macro RESET_RETRACTION]
description: Resets retraction settings to configured defaults
gcode:
    {% set retract_length = printer["gcode_macro _GLOBALS"].firmware_retraction_retract_length %}
    {% set retract_speed = printer["gcode_macro _GLOBALS"].firmware_retraction_retract_speed %}
    {% set lift_z = printer["gcode_macro _GLOBALS"].firmware_retraction_lift_z %}
    {% set lift_z_above = printer["gcode_macro _GLOBALS"].firmware_retraction_lift_z_above %}
    {% set lift_z_below = printer["gcode_macro _GLOBALS"].firmware_retraction_lift_z_below %}
    {% set unretract_speed = printer["gcode_macro _GLOBALS"].firmware_retraction_unretract_speed %}
    {% set unretract_extra_length = printer["gcode_macro _GLOBALS"].firmware_retraction_unretract_extra_length %}

    SET_RETRACTION RETRACT_LENGTH={retract_length} RETRACT_SPEED={retract_speed} LIFT_Z={lift_z} LIFT_Z_ABOVE={lift_z_above} LIFT_Z_BELOW={lift_z_below} UNRETRACT_SPEED={unretract_speed} UNRETRACT_EXTRA_LENGTH={unretract_extra_length}
