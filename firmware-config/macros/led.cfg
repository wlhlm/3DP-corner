[gcode_macro CONTROL_CHAMBER_LIGHT]
description: Toggle chamber lighting with preset color moods
variable_enabled: False
gcode:
    {% set lighting_mood = params.MOOD %}

    {% set brightness = printer["gcode_macro _GLOBALS"].chamber_lighting_brightness|float %}

    {% set led_name = printer["gcode_macro _GLOBALS"].chamber_lighting_name %}

    {% if not lighting_mood %}
        {% if enabled %}
            {% set lighting_mood = "off" %}
        {% else %}
            {% set lighting_mood = "white" %}
        {% endif %}
    {% else %}
        {% set lighting_mood = lighting_mood|lower() %}
    {% endif %}

    {% if lighting_mood == "off" %}
        _PRINT_CONSOLE T="Turning off chamber lights"
        SET_GCODE_VARIABLE MACRO=CONTROL_CHAMBER_LIGHT VARIABLE=enabled VALUE=False
        SET_LED LED={led_name} SYNC=0 RED=0 GREEN=0 BLUE=0
    {% else %}
        _PRINT_CONSOLE T="{"Turning on chamber lights, mood %s" % (lighting_mood)}"
        SET_GCODE_VARIABLE MACRO=CONTROL_CHAMBER_LIGHT VARIABLE=enabled VALUE=True
        {% if lighting_mood == "white" %}
            {% if "W" in printer["neopixel " + led_name].color_data[0] %}
                _SET_LED_CALIBRATED LED={led_name} WHITE={1.0 * brightness|float} RED=0.0 GREEN=0.0 BLUE=0.0
            {% else %}
                _SET_LED_CALIBRATED LED={led_name} RED={1.0 * brightness|float} GREEN={1.0 * brightness|float} BLUE={1.0 * brightness|float}
            {% endif %}
        {% elif lighting_mood == "voron" %}
            _SET_LED_CALIBRATED LED={led_name} RED={1.0 * brightness|float}
        {% elif lighting_mood == "done" %}
            _SET_LED_CALIBRATED LED={led_name} RED={0.35 * brightness|float} GREEN={0.8 * brightness|float} BLUE={0.07 * brightness|float}
        {% else %}
            {action_raise_error("invalid lighting mood: %s" % (lighting_mood))}
        {% endif %}
    {% endif %}

[gcode_macro CONTROL_STATUS_LIGHT]
variable__normal_status_color: None
gcode:
    {% set status = params.STATUS|default("normal") %}

    {% set led_name = printer["gcode_macro _GLOBALS"].status_led_name %}
    {% set led_start = printer["gcode_macro _GLOBALS"].status_led_start %}

    {% set status_colors = {"off": [0.0, 0.0, 0.0], "error": [1.0, 0.0, 0.0], "warning": [0.97, 0.75, 0.24], "heating": [0.9, 0.2, 0.49], "calibrating": [0.05, 0.72, 0.93], "printing": [0.23, 0.83, 0.06]} %}

    {% if status == "normal" and _normal_status_color %}
        _SET_STATUS_LED RAW=1 RED={_normal_status_color[0]} GREEN={_normal_status_color[1]} BLUE={_normal_status_color[2]}
        SET_GCODE_VARIABLE MACRO=CONTROL_STATUS_LIGHT VARIABLE=_normal_status_color VALUE=None
    {% else %}
        {% if status in status_colors %}
            {% set normal_status_color_red = printer["neopixel " + led_name].color_data[led_start].R %}
            {% set normal_status_color_green = printer["neopixel " + led_name].color_data[led_start].G %}
            {% set normal_status_color_blue = printer["neopixel " + led_name].color_data[led_start].B %}

            SET_GCODE_VARIABLE MACRO=CONTROL_STATUS_LIGHT VARIABLE=_normal_status_color VALUE='[{normal_status_color_red}, {normal_status_color_green}, {normal_status_color_blue}]'
            _SET_STATUS_LED RED={status_colors[status][0]} GREEN={status_colors[status][1]} BLUE={status_colors[status][2]}
        {% endif %}
    {% endif %}

[gcode_macro _SET_STATUS_LED]
description: Encapsulates settings one or multiple status LEDs
gcode:
    {% set raw = params.RAW|default("0") %}
    {% set red = params.RED|float %}
    {% set green = params.GREEN|float %}
    {% set blue = params.BLUE|float %}

    {% set led_name = printer["gcode_macro _GLOBALS"].status_led_name %}
    {% set led_start = printer["gcode_macro _GLOBALS"].status_led_start %}
    {% set led_count = printer["gcode_macro _GLOBALS"].status_led_count %}

    {% for i in range(led_count) %}
        {% if raw == "1" %}SET_LED{% else %}_SET_LED_CALIBRATED{% endif %} LED={led_name} TANSMIT={% if i < led_count - 1 %}0{% else %}1{% endif %} INDEX={led_start + i} RED={red} GREEN={green} BLUE={blue}
    {% endfor %}

[gcode_macro _SET_LED_CALIBRATED]
description: Adjusts RGB values to compensate for differing brightness between the subpixels. Determined by setting LEDs to pure white and adjusting subpixel brightness until the desiered temperature was reached.
gcode:
    {% set led = params.LED %}

    {% set calibrated_red_multiplier = printer["gcode_macro _GLOBALS"].led_calibration_data[led][0] %}
    {% set calibrated_green_multiplier = printer["gcode_macro _GLOBALS"].led_calibration_data[led][1] %}
    {% set calibrated_blue_multiplier = printer["gcode_macro _GLOBALS"].led_calibration_data[led][2] %}

    {% set ns = namespace(param_str="") %}
    {% for param in params %}
        {% if param|lower not in ["led", "red", "green", "blue", "white", "sync"] %}
            {% set ns.param_str = "%s %s='%s'" % (ns.param_str, param, params[param]) %}
        {% endif %}
    {% endfor %}

    SET_LED LED={led} SYNC=0 {% if params.RED %}RED={params.RED|float * calibrated_red_multiplier}{% endif %} {% if params.GREEN %}GREEN={params.GREEN|float * calibrated_green_multiplier}{% endif %} {% if params.BLUE %}BLUE={params.BLUE|float * calibrated_blue_multiplier}{% endif %} {%if params.WHITE %}WHITE={params.WHITE|float}{% endif %} {ns.param_str}

