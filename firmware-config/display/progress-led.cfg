# the display_template section used within requires at least one addressable LED (strip) to be defined (for example a neopixel, led, or dotstar section)

[delayed_gcode ENABLE_PROGRESS_LED]
initial_duration: 0.1
gcode:
    {% if not printer["gcode_macro _GLOBALS"].globals_loaded %}
        UPDATE_DELAYED_GCODE ID=ENABLE_PROGRESS_LED DURATION=1
    {% else %}
        _ACTIVATE_PROGRESS_LED
    {% endif %}

[gcode_macro _ACTIVATE_PROGRESS_LED]
gcode:
    {% set led_name = printer["gcode_macro _GLOBALS"].progress_led_name %}
    {% set led_start = printer["gcode_macro _GLOBALS"].progress_led_start %}
    {% set led_count = printer["gcode_macro _GLOBALS"].progress_led_count %}

    {% if led_name %}
        {% if led_count == 0 %}
            {% set led_count = printer["neopixel " + led_name].color_data | length %}
        {% endif %}

        {% set calibrated_red_multiplier = printer["gcode_macro _GLOBALS"].led_calibration_data[led_name][0] %}
        {% set calibrated_green_multiplier = printer["gcode_macro _GLOBALS"].led_calibration_data[led_name][1] %}
        {% set calibrated_blue_multiplier = printer["gcode_macro _GLOBALS"].led_calibration_data[led_name][2] %}

        {% for i in range(led_count) %}
            SET_LED_TEMPLATE LED={led_name} INDEX={led_start + 1 + i}  TEMPLATE=led_print_progress param_calibration_data="{printer["gcode_macro _GLOBALS"].led_calibration_data[led_name]}" param_start_color="(0.5, 0.0, 1.0, 0.0)" param_completion_color="(1.0, 0.0, 0.0, 0.0)"
        {% endfor %}
    {% endif %}

# Simple progress lighting: from 0% to completion_threshold% fade to start_color, and then transition to completion_color
[display_template led_print_progress]
param_idle_color: (0.0, 0.0, 0.0, 1.0)
param_calibration_data: (1.0, 1.0, 1.0)
param_start_color: (0.0, 0.0, 0.0, 0.0)
param_completion_color: (0.0, 0.0, 0.0, 0.0)
text:
    {% if param_start_color %}
        {% if printer.virtual_sdcard.is_active %}
            {% set progress = printer.virtual_sdcard.progress %}
            {% set completion_threshold = 0.9 %}

            {% if progress <= completion_threshold %}
                {% set scale = progress * (1.0 / completion_threshold) %}

                {param_start_color[0] * param_calibration_data[0] * scale}, {param_start_color[1] * param_calibration_data[1] * scale}, {param_start_color[1] * param_calibration_data[2] * scale}, {param_start_color[1] * scale}
            {% else %}
                {% set threshold_scale = (progress - completion_threshold) / (1 - completion_threshold) %}
                {% set threshold_scaled_colors = ((param_completion_color[0] - param_idle_color[0]) * threshold_scale, (param_completion_color[1] - param_idle_color[1]) * threshold_scale, (param_completion_color[2] - param_idle_color[2]) * threshold_scale, (param_completion_color[3] - param_idle_color[3]) * threshold_scale) %}

                {threshold_scaled_colors[0] * param_calibration_data[0]}, {threshold_scaled_colors[1] * param_calibration_data[1]}, {threshold_scaled_colors[2] * param_calibration_data[2]}, {threshold_scaled_colors[3]}
            {% endif %}
        {% elif printer.idle_timeout.state in ["Printing", "Paused"] %}
            {param_idle_color[0]}, {param_idle_color[1]}, {param_idle_color[2]}, {param_idle_color[3]}
        {% else %}
            0.0, 0.0, 0.0, 0.0
        {% endif %}
    {% else %}
        0.0, 0.0, 0.0, 0.0
    {% endif %}
