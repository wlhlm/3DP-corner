# Primitive implementation of a screensaver to improve OLED longevity.
#
# I'm not a aware of a method to detect the transition from idle state to
# active/ready/printing. Thus, functionality is limited somewhat and disabling
# the screensaver is a bit clunky
[display_data __screensaver blank]
position: 0, 0
text:
    {% if False %}
        # This display_data section should be empty, but these empty templates
        # seem to be necessary to prevent klippy config parsing errors.
    {% endif %}

[menu __main screensaver_disable]
type: command
name: Disable Screensaver
enable: {printer["gcode_macro CONTROL_SCREENSAVER"].enabled}
index: 0
gcode:
    {menu.exit()}
    CONTROL_SCREENSAVER STATE=0

[menu __main screensaver_disable_blank_spacer1]
type: command
name:
enable: {printer["gcode_macro CONTROL_SCREENSAVER"].enabled}
index: 1
gcode:

[menu __main screensaver_disable_blank_spacer2]
type: command
name:
enable: {printer["gcode_macro CONTROL_SCREENSAVER"].enabled}
index: 2
gcode:

[delayed_gcode ACTIVATE_SCREENSAVER]
initial_duration: 900 # 15 min after startup
gcode:
    CONTROL_SCREENSAVER STATE=1

[gcode_macro INHIBIT_SCREENSAVER]
description: Control screensaver timer
gcode:
    {% if "MODE" in params %}
        {% set inhibit_mode = params.MODE %}
    {% else %}
        {% set inhibit_mode = "off" %}
    {% endif %}

    {% set default_screensaver_print_timeout = 900 %} # 15 min

    {% if inhibit_mode == "off" %}
        UPDATE_DELAYED_GCODE ID=ACTIVATE_SCREENSAVER DURATION=0
    {% elif inhibit_mode in ["print", "default"] %}
        UPDATE_DELAYED_GCODE ID=ACTIVATE_SCREENSAVER DURATION={default_screensaver_print_timeout}
    {% else %}
        _PRINT_CONSOLE ERROR=1 T="Unknown screensaver inhibition mode: {inhibit_mode}"
    {% endif %}

[gcode_macro CONTROL_SCREENSAVER]
description: Toggle or enable/disable screensaver
variable_enabled: False
gcode:
    {% if "STATE" in params %}
        {% set state = params.STATE %}
    {% endif %}

    {% if state not in ["0", "1"] %}
        _PRINT_CONSOLE ERROR=1 T="Unknown value for STATE: {state}"
    {% elif enabled or state == "0" %}
        SET_DISPLAY_GROUP GROUP=__custom_display
        SET_GCODE_VARIABLE MACRO=CONTROL_SCREENSAVER VARIABLE=enabled VALUE=False
        INHIBIT_SCREENSAVER MODE=print
    {% elif not enabled or state == "1" %}
        SET_DISPLAY_GROUP GROUP=__screensaver
        SET_GCODE_VARIABLE MACRO=CONTROL_SCREENSAVER VARIABLE=enabled VALUE=True
        INHIBIT_SCREENSAVER MODE=off
    {% endif %}
